#!/bin/bash -e

function install_automake_dependencies() {
  installdir="$1"
  install-local install autoconf 2.69
}

function install_automake() {
  version="$1"
  installdir="$2"
  setup_file="${installdir}/setup.sh"
  srcdir="$(pwd)/automake-${version}"
  tarball="automake-${version}.tar.xz"
  download_url="http://ftp.gnu.org/gnu/automake/${tarball}"

  echo "version=${version}"
  echo "installdir=${installdir}"
  echo "setup_file=${setup_file}"
  echo "srcdir=${srcdir}"
  echo "tarball=${tarball}"
  echo "download_url=${download_url}"
 
  #-------------------------------------------------------------------------------
  # Download and unpack
  #-------------------------------------------------------------------------------
  if [ ! -f "$tarball" -a ! -f "${tarball%.xz}" ]; then
      echo "[INFO] Downloading Automake '$download_url'"
      wget --verbose "$download_url" || exit 1
  else
      echo "[INFO] [SKIP] Automake tarball already exists: '$tarball'"
  fi
  
  if [ ! -d "$srcdir" ]; then
      echo "[INFO] Unpacking Automake tarball: '$tarball'"
      unxz "$tarball" || exit 1
      tar xvf "${tarball%.xz}"
  else
      echo "[INFO] [SKIP] Automake source code already exists: '$srcdir'"
  fi
  
  #-------------------------------------------------------------------------------
  # Build and install
  #-------------------------------------------------------------------------------
  cd "${srcdir}"
  
  if [ ! -e "${installdir}/bin" ]; then
      echo "[INFO] Configuring Automake"
      echo "[INFO] Installing to '$installdir'"
  
      "${srcdir}/configure" --prefix="$installdir" || exit 1
  
      make -j all || exit 1
      make -j install || exit 1
  fi
  
      echo "[INFO] Creating Automake environment setup file ${setup_file}"
      cat > "${setup_file}" <<-EOF
#!/bin/bash
#
# Automatically generated by $0 on $(date)
export version="${version}"
export AUTOCONF_HOME="${installdir}"
export PATH="\${AUTOCONF_HOME}/bin:\${PATH}"
EOF
}

