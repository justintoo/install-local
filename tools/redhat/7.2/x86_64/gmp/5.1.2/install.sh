#!/bin/bash -e

function install_gmp_dependencies() {
  :
}

function install_gmp() {
  version="$1"
  installdir="$2"
  setup_file="${installdir}/setup.sh"
  srcdir="$(pwd)/gmp-${version}"
  tarball="gmp-${version}.tar.bz2"
  download_url="http://ftp.gnu.org/gnu/gmp/${tarball}"

  debug__ "version=${version}"
  debug__ "installdir=${installdir}"
  debug__ "setup_file=${setup_file}"
  debug__ "srcdir=${srcdir}"
  debug__ "tarball=${tarball}"
  debug__ "download_url=${download_url}"
 
  #-------------------------------------------------------------------------------
  # Download and unpack
  #-------------------------------------------------------------------------------
  if [ ! -f "${tarball}" ]; then
      echo "[INFO] Downloading GMP '$download_url'"
      wget --verbose "$download_url" || exit 1
  else
      echo "[INFO] [SKIP] GMP tarball already exists: '$tarball'"
  fi
  
  if [ ! -d "$srcdir" ]; then
      echo "[INFO] Unpacking GMP tarball: '$tarball'"
      tar xjvf "${tarball}"
  else
      echo "[INFO] [SKIP] GMP source code already exists: '$srcdir'"
  fi
  
  #-------------------------------------------------------------------------------
  # Build and install
  #-------------------------------------------------------------------------------
  cd "${srcdir}"
  
  if [ ! -e "${installdir}/lib" ]; then
      echo "[INFO] Configuring GMP"
      echo "[INFO] Installing to '$installdir'"
  
      "${srcdir}/configure" --prefix="$installdir" || exit 1
  
      make -j all || exit 1
      make -j install || exit 1
  fi
  
      echo "[INFO] Creating GMP environment setup file ${setup_file}"
      cat > "${setup_file}" <<-EOF
#!/bin/bash
#
# Automatically generated by $0 on $(date)
export GMP_VERSION="${version}"
export GMP_HOME="${installdir}"
export LD_LIBRARY_PATH="\${GMP_HOME}/lib:\${LD_LIBRARY_PATH}"
EOF
}

