#!/bin/bash -e
#
# install.sh <version> <installdir>

function install_autoconf_dependencies() {
  local installdir="$1"
}

function install_autoconf() {
  local tool="autoconf"
  local version="$1"
  local installdir="$2"

  if [ -z "${version}" -o -z "${installdir}" ]; then
    echo "Usage: install_autoconf <version> <installdir>"
    exit 1
  fi

  local workspace="${installdir}/workspace"
  local installation_log="${workspace}/installation.log"
  local setup_file="${installdir}/setup.sh"
  local srcdir="${workspace}/autoconf-${version}"
  local tarball="autoconf-${version}.tar.xz"
  local download_url="http://ftp.gnu.org/gnu/autoconf/${tarball}"

  echo "version=${version}"
  echo "installdir=${installdir}"
  echo "setup_file=${setup_file}"
  echo "srcdir=${srcdir}"
  echo "tarball=${tarball}"
  echo "download_url=${download_url}"

  #-------------------------------------------------------------------------------
  # Install dependencies
  #-------------------------------------------------------------------------------
  install_autoconf_dependencies "${installdir}/dependencies"

  #-------------------------------------------------------------------------------
  # Workspace
  #-------------------------------------------------------------------------------
  mkdir -p "${workspace}"
  cd "${workspace}"
 
  #-------------------------------------------------------------------------------
  # Download and unpack
  #-------------------------------------------------------------------------------
  if [ ! -f "$tarball" -a ! -f "${tarball%.xz}" ]; then
      echo "[INFO] Downloading Autoconf '$download_url'"
      wget --verbose "$download_url" || exit 1
  else
      echo "[INFO] [SKIP] Autoconf tarball already exists: '$tarball'"
  fi
  
  if [ ! -d "$srcdir" ]; then
      echo "[INFO] Unpacking Autoconf tarball: '$tarball'"
      unxz "$tarball" || exit 1
      tar xvf "${tarball%.xz}"
  else
      echo "[INFO] [SKIP] Autoconf source code already exists: '$srcdir'"
  fi
  
  #-------------------------------------------------------------------------------
  # Build and install
  #-------------------------------------------------------------------------------
  cd "${srcdir}"
  
  if [ ! -e "${installdir}/bin" ]; then
      echo "[INFO] Configuring Autoconf"
      echo "[INFO] Installing to '$installdir'"
  
      "${srcdir}/configure" --prefix="$installdir" || exit 1
      make -j${PARALLELISM:-2} all || exit 1
      make -j${PARALLELISM:-2} install || exit 1
  fi
  
      echo "[INFO] Creating Autoconf environment setup file ${setup_file}"
      cat > "${setup_file}" <<-EOF
#!/bin/bash
#
# Automatically generated by $0 on $(date)
export AUTOCONF_VERSION="${version}"
export AUTOCONF_HOME="${installdir}"
export PATH="\${AUTOCONF_HOME}/bin:\${PATH}"
EOF
}

# script is executed as standalone installer
[[ "$(basename -- "$0")" == "install.sh" ]] && install_autoconf $1 $2 || true

